#import "utils/chest.jsligo" "Chest"
#import "errors.jsligo" "Errors"
#import "action.jsligo" "Action"

export type t = 
| ["Waiting"]
| ["Reveal", Action.t]
| ["Played", chest];

export type decode = (chest: chest) => Action.t;

export const waiting : t = Waiting();

export const is_waiting = (round_value: t) : bool => {
    return match(round_value, {
        Waiting: () => true,
        Played: __p => false,
        Reveal: _a => false
    })
};

export const is_played = (round_value: t) : bool => {
    return match(round_value, {
        Waiting: () => false,
        Played: __p => true,
        Reveal: _a => false
    })
};

export const is_revealed = (round_value: t) : bool => {
    return match(round_value, {
        Waiting: () => false,
        Played: __p => false,
        Reveal: _a => true
    })
};

export const play = (round_value: t, chest: chest) : t => {
    return match(round_value, {
        Waiting: () => Played(chest),
        Played: _p => failwith(Errors.user_not_allowed_to_play),
        Reveal: _a => failwith(Errors.user_not_allowed_to_play)
    })
};

export const reveal = (round_value: t, decode: decode) : t => {
    return match(round_value, {
        Waiting: () => failwith(Errors.user_not_allowed_to_reveal),
        Played: chest => Reveal(decode(chest)),
        Reveal: _a => failwith(Errors.user_not_allowed_to_reveal)
    })
};
