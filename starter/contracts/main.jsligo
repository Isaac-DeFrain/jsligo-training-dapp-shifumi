namespace Storage {
    export type t = unit;
  
    export let new_game = ([storage, player1, player2]:[t, address, address]) : t => storage;
    export let play = ([storage, player, chest]:[t, address, chest]) : t => storage;
    export let reveal = ([storage, player, chest_key, secret]:[t, address, chest_key, nat]) : t => storage;
};

export type parameter = 
  ["Reset", [address, address]] 
| ["Play", chest] 
| ["Reveal", [chest_key, nat]];

export let main = ([parameter,storage]:[parameter, Storage.t]) : [list<operation>, Storage.t] => {
    const new_storage = match(parameter, {
        Reset : (p:[address,adress]) => Storage.new_game(storage, p[0], p[1]),
        Play : (p:chest) => Storage.play(storage, Tezos.sender, p),
        Reveal : (p:[chest_key, nat]) => Storage.reveal(storage, Tezos.sender, p[0], p[1]),
    });
    return [list([]) as list<operation>, new_storage];
};
